---
- name: Nested as dictionary
  hosts: localhost
  gather_facts: false
  vars:
    machines:
      server_1:
        hostname: "Server-1"
        network_adapters:
          - name: LAN1
            ip_address: "10.0.0.10"
          - name: LAN2
            ip_address: "10.99.99.20"
      client_1:
        hostname: "Client-1"
        network_adapters:
          - name: LAN2
            ip_address: "10.99.99.30"
      client_2:
        hostname: "Client-2"
        network_adapters:
          - name: LAN2
            ip_address: "10.99.99.31"
  tasks:
    - name: List all machines and their interface information
      ansible.builtin.debug:
        msg: "Host={{ server.hostname }} Interface={{ adapter.name }} IP={{ adapter.ip_address }}"
      loop: "{{ machines | subelements('network_adapters') }}"
      loop_control:
        label: "{{ server.hostname }}: {{ adapter.name }}"
      vars:
        server: "{{ item.0 }}"
        adapter: "{{ item.1 }}"

- name: Nested as list
  hosts: localhost
  gather_facts: false
  vars:
    machines:
      - hostname: "Server-1"
        network_adapters:
          - name: LAN1
            ip_address: "10.0.0.10"
          - name: LAN2
            ip_address: "10.99.99.20"
      - hostname: "Client-1"
        network_adapters:
          - name: LAN2
            ip_address: "10.99.99.30"
      - hostname: "Client-2"
        network_adapters:
          - name: LAN2
            ip_address: "10.99.99.31"
  tasks:
    - name: List all machines and their interface information
      ansible.builtin.debug:
        msg: "Host={{ server.hostname }} Interface={{ adapter.name }} IP={{ adapter.ip_address }}"
      loop: "{{ machines | subelements('network_adapters') }}"
      loop_control:
        label: "{{ server.hostname }}: {{ adapter.name }}"
      vars:
        server: "{{ item.0 }}"
        adapter: "{{ item.1 }}"
